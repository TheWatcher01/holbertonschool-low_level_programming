# Compiler to be used
CC = gcc

# Command to compile source files into object files
COMPILE = $(CC) $(CFLAGS) -c

# Source files
SRC = main.c school.c

# Object files
OBJ = $(SRC:.c=.o)

# Name of the executable
NAME = school

# Compiler flags
CFLAGS = -Wall -Werror -Wextra -pedantic

# Rule 'all' that builds the executable
all: $(NAME)

# Rule that links the object files into the executable
$(NAME): $(OBJ)
    @$(CC) $(OBJ) -o $(NAME)

# Rule that compiles source files into object files
%.o: %.c m.h
    @$(COMPILE) $< -o $@

# Rule 'clean' that deletes all Emacs and Vim temporary files and the executable
clean:
    @rm -f *~ \#*\# $(NAME)

# Rule 'oclean' that deletes the object files
oclean:
    @rm -f $(OBJ)

# Rule 'fclean' that deletes all Emacs and Vim temporary files, the executable, and the object files
fclean: clean oclean

# Rule 're' that forces recompilation of all source files
re: fclean all

# .PHONY rule to avoid problems with files of the same name as rules
.PHONY: all clean oclean fclean re
